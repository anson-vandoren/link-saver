{
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "root": true,
  "extends": [
    "airbnb-base",
    "airbnb-typescript/base",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking"
  ],
  "overrides": [],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.base.json"
  },
  "rules": {
    "no-use-before-define": [
      "error",
      { "functions": false }
    ],
    "@typescript-eslint/no-use-before-define": [
      "error",
      { "functions": false }
    ],
    "no-plusplus": 0,
    "object-curly-newline": [
      "warn",
      {
        "ObjectExpression": {
          "multiline": true,
          "minProperties": 6,
          "consistent": true
        },
        "ObjectPattern": {
          "multiline": true,
          "minProperties": 6,
          "consistent": true
        },
        "ImportDeclaration": {
          "multiline": true,
          "minProperties": 6,
          "consistent": true
        },
        "ExportDeclaration": {
          "multiline": true,
          "minProperties": 6,
          "consistent": true
        }
      }
    ],
    "no-underscore-dangle": 0,
    "import/extensions": 0,
    "no-restricted-syntax": [
      "warn",
      {
        "selector": "ForInStatement",
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
      },
      // {
      //   "selector": "ForOfStatement",
      //   "message": "iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations."
      // },
      {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ],
    "max-len": [
      "warn"
    ],
    "@typescript-eslint/lines-between-class-members": "off",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_"
      }
    ]
  }
}
